<?xml version="1.0" encoding="UTF-8"?>
<persistence version="2.1" xmlns="http://xmlns.jcp.org/xml/ns/persistence"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/persistence http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd">

    <persistence-unit name="jpaDemo" transaction-type="RESOURCE_LOCAL">
        <!-- 配置 Hibernate JPA作为JPA的实现ORM框架 -->
        <!-- 若项目只有一个JPA实现产品，那么这个配置可以不写 -->
        <!--<provider>org.hibernate.ejb.HibernatePersistence</provider>-->

        <!-- 添加持久化类 -->
        <class>com.bfchengnuo.domain.Person</class>
        <class>com.bfchengnuo.domain.User</class>
        <class>com.bfchengnuo.domain.Order</class>

        <!-- 
          配置二级缓存的策略 
          ALL：所有的实体类都被缓存
          NONE：所有的实体类都不被缓存. 
          ENABLE_SELECTIVE：标识 @Cacheable(true) 注解的实体类将被缓存
          DISABLE_SELECTIVE：缓存除标识 @Cacheable(false) 以外的所有实体类
          UNSPECIFIED：默认值，JPA 产品默认值将被使用
        -->
        <shared-cache-mode>ENABLE_SELECTIVE</shared-cache-mode>

        <properties>
            <!-- 连接数据库的基本信息 -->
            <property name="javax.persistence.jdbc.driver" value="com.mysql.jdbc.Driver"/>
            <property name="javax.persistence.jdbc.url" value="jdbc:mysql:///test?useUnicode=true&amp;characterEncoding=UTF-8"/>
            <property name="javax.persistence.jdbc.user" value="root"/>
            <property name="javax.persistence.jdbc.password" value="root"/>

            <!-- 配置 JPA 实现产品的基本属性. 配置 hibernate 的基本属性 -->
            <property name="hibernate.format_sql" value="true"/>
            <property name="hibernate.show_sql" value="true"/>
            <property name="hibernate.hbm2ddl.auto" value="update"/>
            <property name="hibernate.dialect" value="org.hibernate.dialect.MySQL57Dialect"/>

            <!-- 二级缓存相关，需要使用独立的配置文件 -->
            <!--<property name="hibernate.cache.use_second_level_cache" value="true"/>-->
            <!--<property name="hibernate.cache.region.factory_class" value="org.hibernate.cache.ehcache.EhCacheRegionFactory"/>-->
            <!--<property name="hibernate.cache.use_query_cache" value="true"/>-->
        </properties>
    </persistence-unit>
</persistence>