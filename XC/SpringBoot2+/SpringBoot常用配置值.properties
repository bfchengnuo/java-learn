# 对比 SpringBoot常用配置说明 查看效果更佳！




###############################################################
# 数据源及连接池配置
###############################################################
spring.datasource.druid.url=jdbc:mysql:///edu?useUnicode=true&characterEncoding=UTF-8&zeroDateTimeBehavior=convertToNull
spring.datasource.druid.username =root
spring.datasource.druid.password =infcn123
spring.datasource.druid.driver-class-name=com.mysql.jdbc.Driver
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
spring.jpa.database=MYSQL
spring.jpa.show-sql =true
spring.datasource.druid.filters=stat
spring.datasource.druid.connection-properties=config.decrypt=true
spring.datasource.druid.initial-size=8
spring.datasource.druid.min-idle=5
spring.datasource.druid.max-active=10
spring.datasource.druid.time-between-eviction-runs-millis=60000
spring.datasource.druid.min-evictable-idle-time-millis=600000
spring.datasource.druid.validation-query=SELECT 'x'
spring.datasource.druid.pool-prepared-statements=true spring.datasource.druid.max-pool-prepared-statement-per-connection-size=20
# 配置hibernate的命名策略
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl




###############################################################
# 文件上传配置
###############################################################
spring.http.multipart.enabled=true
spring.http.multipart.file-size-threshold=0
spring.http.multipart.location=d:/tmp
spring.http.multipart.max-file-size=50Mb
spring.http.multipart.max-request-size=100Mb



###############################################################
# mvc配置
###############################################################
spring.mvc.view.prefix=/WEB-INF/jsp/
spring.mvc.view.suffix=.jsp



###############################################################
# Jackson相关设置
###############################################################
# 日期格式化
spring.jackson.date-format=yyyy-MM-dd HH:mm:ss
spring.jackson.joda-date-time-format=yyyy-MM-dd HH:mm:ss
# 时区设置
spring.jackson.time-zone=GMT+8
spring.jackson.serialization.fail-on-empty-beans=false




###############################################################
# 取消身份认证
###############################################################
security.basic.enabled=false


###############################################################
# 中文乱码解决
###############################################################
spring.http.encoding.force=true
spring.http.encoding.charset=UTF-8
spring.http.encoding.enabled=true
server.tomcat.uri-encoding=UTF-8




###############################################################
# REDIS (RedisProperties)
###############################################################

# Redis数据库索引（默认为0）
spring.redis.database=0

# Redis服务器地址
spring.redis.host=192.168.0.58

# Redis服务器连接端口
spring.redis.port=6379

# Redis服务器连接密码（默认为空）
spring.redis.password=

# 连接池最大连接数（使用负值表示没有限制）
spring.redis.pool.max-active=8

# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.pool.max-wait=-1

# 连接池中的最大空闲连接
spring.redis.pool.max-idle=8

# 连接池中的最小空闲连接
spring.redis.pool.min-idle=0

# 连接超时时间（毫秒）
spring.redis.timeout=0




###############################################################
###############################################################
#  分割线，下面都是官方文档的默认值啦
###############################################################
###############################################################




###############################################################
# PROFILES
###############################################################
spring.profiles.active= # comma list of active profiles
spring.profiles.include= # unconditionally activate the specified comma separated profiles
APPLICATION SETTINGS (SpringApplication)

spring.main.sources=
spring.main.web-environment= # detect by default
spring.main.show-banner=true
spring.main....= # see class for all properties





###############################################################
# LOGGING
###############################################################
logging.path=/var/logs
logging.file=myapp.log
logging.config= # location of config file (default classpath:logback.xml for logback)
logging.level.*= # levels for loggers, e.g. "logging.level.org.springframework=DEBUG" (TRACE, DEBUG, INFO, WARN, ERROR, FATAL, OFF)





###############################################################
# IDENTITY (ContextIdApplicationContextInitializer)
###############################################################
spring.application.name=
spring.application.index=
EMBEDDED SERVER CONFIGURATION (ServerProperties)

server.port=8080
server.address= # bind to a specific NIC
server.session-timeout= # session timeout in seconds
server.context-parameters.*= # Servlet context init parameters, e.g. server.context-parameters.a=alpha
server.context-path= # the context path, defaults to '/'
server.servlet-path= # the servlet path, defaults to '/'
server.ssl.enabled=true # if SSL support is enabled
server.ssl.client-auth= # want or need
server.ssl.key-alias=
server.ssl.ciphers= # supported SSL ciphers
server.ssl.key-password=
server.ssl.key-store=
server.ssl.key-store-password=
server.ssl.key-store-provider=
server.ssl.key-store-type=
server.ssl.protocol=TLS
server.ssl.trust-store=
server.ssl.trust-store-password=
server.ssl.trust-store-provider=
server.ssl.trust-store-type=
server.tomcat.access-log-pattern= # log pattern of the access log
server.tomcat.access-log-enabled=false # is access logging enabled
server.tomcat.internal-proxies=10\.\d{1,3}\.\d{1,3}\.\d{1,3}|\
192\.168\.\d{1,3}\.\d{1,3}|\
169\.254\.\d{1,3}\.\d{1,3}|\
127\.\d{1,3}\.\d{1,3}\.\d{1,3} # regular expression matching trusted IP addresses
server.tomcat.protocol-header=x-forwarded-proto # front end proxy forward header
server.tomcat.port-header= # front end proxy port header
server.tomcat.remote-ip-header=x-forwarded-for
server.tomcat.basedir=/tmp # base dir (usually not needed, defaults to tmp)
server.tomcat.background-processor-delay=30; # in seconds
server.tomcat.max-http-header-size= # maximum size in bytes of the HTTP message header
server.tomcat.max-threads = 0 # number of threads in protocol handler
server.tomcat.uri-encoding = UTF-8 # character encoding to use for URL decoding






###############################################################
# SPRING MVC (WebMvcProperties)
###############################################################
spring.mvc.locale= # set fixed locale, e.g. en_UK
spring.mvc.date-format= # set fixed date format, e.g. dd/MM/yyyy
spring.mvc.message-codes-resolver-format= # PREFIX_ERROR_CODE / POSTFIX_ERROR_CODE
spring.mvc.ignore-default-model-on-redirect=true # If the the content of the "default" model should be ignored redirects
spring.view.prefix= # MVC view prefix
spring.view.suffix= # ... and suffix
spring.resources.cache-period= # cache timeouts in headers sent to browser
spring.resources.add-mappings=true # if default mappings should be added






###############################################################
# SPRING HATEOS (HateoasProperties)
###############################################################
spring.hateoas.apply-to-primary-object-mapper=true # if the primary mapper should also be configured
HTTP encoding (HttpEncodingProperties)

spring.http.encoding.charset=UTF-8 # the encoding of HTTP requests/responses
spring.http.encoding.enabled=true # enable http encoding support
spring.http.encoding.force=true # force the configured encoding




###############################################################
# JACKSON (JacksonProperties)
###############################################################
spring.jackson.date-format= # Date format string (e.g. yyyy-MM-dd HH:mm:ss), or a fully-qualified date format class name (e.g. com.fasterxml.jackson.databind.util.ISO8601DateFormat)
spring.jackson.property-naming-strategy= # One of the constants on Jackson's PropertyNamingStrategy (e.g. CAMEL_CASE_TO_LOWER_CASE_WITH_UNDERSCORES) or the fully-qualified class name of a PropertyNamingStrategy subclass
spring.jackson.deserialization.= # see Jackson's DeserializationFeature
spring.jackson.generator.= # see Jackson's JsonGenerator.Feature
spring.jackson.mapper.= # see Jackson's MapperFeature
spring.jackson.parser.= # see Jackson's JsonParser.Feature
spring.jackson.serialization.*= # see Jackson's SerializationFeature






###############################################################
# THYMELEAF (ThymeleafAutoConfiguration)
###############################################################
spring.thymeleaf.check-template-location=true
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.excluded-view-names= # comma-separated list of view names that should be excluded from resolution
spring.thymeleaf.view-names= # comma-separated list of view names that can be resolved
spring.thymeleaf.suffix=.html
spring.thymeleaf.mode=HTML5
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.content-type=text/html # ;charset=<encoding> is added
spring.thymeleaf.cache=true # set to false for hot refresh





###############################################################
# REEMARKER (FreeMarkerAutoConfiguration)
###############################################################
spring.freemarker.allow-request-override=false
spring.freemarker.cache=true
spring.freemarker.check-template-location=true
spring.freemarker.charset=UTF-8
spring.freemarker.content-type=text/html
spring.freemarker.expose-request-attributes=false
spring.freemarker.expose-session-attributes=false
spring.freemarker.expose-spring-macro-helpers=false
spring.freemarker.prefix=
spring.freemarker.request-context-attribute=
spring.freemarker.settings.*=
spring.freemarker.suffix=.ftl
spring.freemarker.template-loader-path=classpath:/templates/ # comma-separated list
spring.freemarker.view-names= # whitelist of view names that can be resolved





###############################################################
# GROOVY TEMPLATES (GroovyTemplateAutoConfiguration)
###############################################################
spring.groovy.template.cache=true
spring.groovy.template.charset=UTF-8
spring.groovy.template.configuration.*= # See Groovy's TemplateConfiguration
spring.groovy.template.content-type=text/html
spring.groovy.template.prefix=classpath:/templates/
spring.groovy.template.suffix=.tpl
spring.groovy.template.view-names= # whitelist of view names that can be resolved





###############################################################
# VELOCITY TEMPLATES (VelocityAutoConfiguration)
###############################################################
spring.velocity.allow-request-override=false
spring.velocity.cache=true
spring.velocity.check-template-location=true
spring.velocity.charset=UTF-8
spring.velocity.content-type=text/html
spring.velocity.date-tool-attribute=
spring.velocity.expose-request-attributes=false
spring.velocity.expose-session-attributes=false
spring.velocity.expose-spring-macro-helpers=false
spring.velocity.number-tool-attribute=
spring.velocity.prefer-file-system-access=true # prefer file system access for template loading
spring.velocity.prefix=
spring.velocity.properties.*=
spring.velocity.request-context-attribute=
spring.velocity.resource-loader-path=classpath:/templates/
spring.velocity.suffix=.vm
spring.velocity.toolbox-config-location= # velocity Toolbox config location, for example "/WEB-INF/toolbox.xml"
spring.velocity.view-names= # whitelist of view names that can be resolved





###############################################################
# JERSEY (JerseyProperties)
###############################################################
spring.jersey.type=servlet # servlet or filter
spring.jersey.init= # init params
spring.jersey.filter.order=




###############################################################
# INTERNATIONALIZATION (MessageSourceAutoConfiguration)
###############################################################
spring.messages.basename=messages
spring.messages.cache-seconds=-1
spring.messages.encoding=UTF-8





###############################################################
# SECURITY (SecurityProperties)
###############################################################
security.user.name=user # login username
security.user.password= # login password
security.user.role=USER # role assigned to the user
security.require-ssl=false # advanced settings ...
security.enable-csrf=false
security.basic.enabled=true
security.basic.realm=Spring
security.basic.path= # /**
security.filter-order=0
security.headers.xss=false
security.headers.cache=false
security.headers.frame=false
security.headers.content-type=false
security.headers.hsts=all # none / domain / all
security.sessions=stateless # always / never / if_required / stateless
security.ignored=false





###############################################################
# DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
###############################################################
spring.datasource.name= # name of the data source spring.datasource.initialize=true # populate using data.sql spring.datasource.schema= # a schema (DDL) script resource reference spring.datasource.data= # a data (DML) script resource reference spring.datasource.sql-script-encoding= # a charset for reading SQL scripts spring.datasource.platform= # the platform to use in the schema resource (schema-${platform}.sql) spring.datasource.continue-on-error=false # continue even if can't be initialized spring.datasource.separator=; # statement separator in SQL initialization scripts spring.datasource.driver-class-name= # JDBC Settings... spring.datasource.url= spring.datasource.username= spring.datasource.password= spring.datasource.jndi-name= # For JNDI lookup (class, url, username & password are ignored when set) spring.datasource.max-active=100 # Advanced configuration... spring.datasource.max-idle=8 spring.datasource.min-idle=8 spring.datasource.initial-size=10 spring.datasource.validation-query= spring.datasource.test-on-borrow=false spring.datasource.test-on-return=false spring.datasource.test-while-idle= spring.datasource.time-between-eviction-runs-millis= spring.datasource.min-evictable-idle-time-millis= spring.datasource.max-wait= spring.datasource.jmx-enabled=false # Export JMX MBeans (if supported) spring.dao.exceptiontranslation.enabled 是否开启PersistenceExceptionTranslationPostProcessor，默认为true spring.datasource.abandon-when-percentage-full 设定超时被废弃的连接占到多少比例时要被关闭或上报 spring.datasource.allow-pool-suspension 使用Hikari pool时，是否允许连接池暂停，默认为: false spring.datasource.alternate-username-allowed 是否允许替代的用户名. spring.datasource.auto-commit 指定updates是否自动提交. spring.datasource.catalog 指定默认的catalog. spring.datasource.commit-on-return 设置当连接被归还时，是否要提交所有还未完成的事务 spring.datasource.connection-init-sql 指定连接被创建，再被添加到连接池之前执行的sql. spring.datasource.connection-init-sqls 使用DBCP connection pool时，指定初始化时要执行的sql spring.datasource.connection-properties.[key] 在使用DBCP connection pool时指定要配置的属性 spring.datasource.connection-test-query 指定校验连接合法性执行的sql语句 spring.datasource.connection-timeout 指定连接的超时时间，毫秒单位. spring.datasource.continue-on-error 在初始化数据库时，遇到错误是否继续，默认false spring.datasource.data 指定Data (DML)脚本 spring.datasource.data-source-class-name 指定数据源的全限定名. spring.datasource.data-source-jndi 指定jndi的地址 spring.datasource.data-source-properties.[key] 使用Hikari connection pool时，指定要设置的属性 spring.datasource.db-properties 使用Tomcat connection pool，指定要设置的属性 spring.datasource.default-auto-commit 是否自动提交. spring.datasource.default-catalog 指定连接默认的catalog. spring.datasource.default-read-only 是否设置默认连接只读. spring.datasource.default-transaction-isolation 指定连接的事务的默认隔离级别. spring.datasource.driver-class-name 指定driver的类名，默认从jdbc url中自动探测. spring.datasource.fair-queue 是否采用FIFO返回连接. spring.datasource.health-check-properties.[key] 使用Hikari connection pool时，在心跳检查时传递的属性 spring.datasource.idle-timeout 指定连接多久没被使用时，被设置为空闲，默认为10ms spring.datasource.ignore-exception-on-pre-load 当初始化连接池时，是否忽略异常. spring.datasource.init-sql 当连接创建时，执行的sql spring.datasource.initial-size 指定启动连接池时，初始建立的连接数量 spring.datasource.initialization-fail-fast 当创建连接池时，没法创建指定最小连接数量是否抛异常 spring.datasource.initialize 指定初始化数据源，是否用data.sql来初始化，默认: true spring.datasource.isolate-internal-queries 指定内部查询是否要被隔离，默认为false spring.datasource.jdbc-interceptors 使用Tomcat connection pool时，指定jdbc拦截器，分号分隔 spring.datasource.jdbc-url 指定JDBC URL. spring.datasource.jmx-enabled 是否开启JMX，默认为: false spring.datasource.jndi-name 指定jndi的名称. spring.datasource.leak-detection-threshold 使用Hikari connection pool时，多少毫秒检测一次连接泄露. spring.datasource.log-abandoned 使用DBCP connection pool，是否追踪废弃statement或连接，默认为: false spring.datasource.log-validation-errors 当使用Tomcat connection pool是否打印校验错误. spring.datasource.login-timeout 指定连接数据库的超时时间. spring.datasource.max-active 指定连接池中最大的活跃连接数. spring.datasource.max-age 指定连接池中连接的最大年龄 spring.datasource.max-idle 指定连接池最大的空闲连接数量. spring.datasource.max-lifetime 指定连接池中连接的最大生存时间，毫秒单位. spring.datasource.max-open-prepared-statements 指定最大的打开的prepared statements数量. spring.datasource.max-wait 指定连接池等待连接返回的最大等待时间，毫秒单位. spring.datasource.maximum-pool-size 指定连接池最大的连接数，包括使用中的和空闲的连接. spring.datasource.min-evictable-idle-time-millis 指定一个空闲连接最少空闲多久后可被清除. spring.datasource.min-idle 指定必须保持连接的最小值(For DBCP and Tomcat connection pools) spring.datasource.minimum-idle 指定连接维护的最小空闲连接数，当使用HikariCP时指定. spring.datasource.name 指定数据源名. spring.datasource.num-tests-per-eviction-run 指定运行每个idle object evictor线程时的对象数量 spring.datasource.password 指定数据库密码. spring.datasource.platform 指定schema要使用的Platform(schema-${platform}.sql)，默认为: all spring.datasource.pool-name 指定连接池名字. spring.datasource.pool-prepared-statements 指定是否池化statements. spring.datasource.propagate-interrupt-state 在等待连接时，如果线程被中断，是否传播中断状态. spring.datasource.read-only 当使用Hikari connection pool时，是否标记数据源只读 spring.datasource.register-mbeans 指定Hikari connection pool是否注册JMX MBeans. spring.datasource.remove-abandoned 指定当连接超过废弃超时时间时，是否立刻删除该连接. spring.datasource.remove-abandoned-timeout 指定连接应该被废弃的时间. spring.datasource.rollback-on-return 在归还连接时，是否回滚等待中的事务. spring.datasource.schema 指定Schema (DDL)脚本. spring.datasource.separator 指定初始化脚本的语句分隔符，默认: ; spring.datasource.sql-script-encoding 指定SQL scripts编码. spring.datasource.suspect-timeout 指定打印废弃连接前的超时时间. spring.datasource.test-on-borrow 当从连接池借用连接时，是否测试该连接. spring.datasource.test-on-connect 创建时，是否测试连接 spring.datasource.test-on-return 在连接归还到连接池时是否测试该连接. spring.datasource.test-while-idle 当连接空闲时，是否执行连接测试. spring.datasource.time-between-eviction-runs-millis 指定空闲连接检查、废弃连接清理、空闲连接池大小调整之间的操作时间间隔 spring.datasource.transaction-isolation 指定事务隔离级别，使用Hikari connection pool时指定 spring.datasource.url 指定JDBC URL. spring.datasource.use-disposable-connection-facade 是否对连接进行包装，防止连接关闭之后被使用. spring.datasource.use-equals 比较方法名时是否使用String.equals()替换==. spring.datasource.use-lock 是否对连接操作加锁 spring.datasource.username 指定数据库名. spring.datasource.validation-interval 指定多少ms执行一次连接校验. spring.datasource.validation-query 指定获取连接时连接校验的sql查询语句. spring.datasource.validation-query-timeout 指定连接校验查询的超时时间. spring.datasource.validation-timeout 设定连接校验的超时时间，当使用Hikari connection pool时指定 spring.datasource.validator-class-name 用来测试查询的validator全限定名. spring.datasource.xa.data-source-class-name 指定数据源的全限定名. spring.datasource.xa.properties 指定传递给XA data source的属性





###############################################################
# DATASOURCE (PersistenceExceptionTranslationAutoConfiguration
###############################################################
spring.dao.exceptiontranslation.enabled=true 




###############################################################
# MONGODB (MongoProperties)
###############################################################
spring.data.mongodb.host= # the db host
spring.data.mongodb.port=27017 # the connection port (defaults to 27107)
spring.data.mongodb.uri=mongodb://localhost/test # connection URL
spring.data.mongodb.database=
spring.data.mongodb.authentication-database=
spring.data.mongodb.grid-fs-database=
spring.data.mongodb.username=
spring.data.mongodb.password=
spring.data.mongodb.repositories.enabled=true # if spring data repository support is enabled




###############################################################
# JPA (JpaBaseConfiguration, HibernateJpaAutoConfiguration)
###############################################################
spring.jpa.properties.*= # properties to set on the JPA connection
spring.jpa.open-in-view=true
spring.jpa.show-sql=true
spring.jpa.database-platform=
spring.jpa.database=
spring.jpa.generate-ddl=false # ignored by Hibernate, might be useful for other vendors
spring.jpa.hibernate.naming-strategy= # naming classname
spring.jpa.hibernate.ddl-auto= # defaults to create-drop for embedded dbs
spring.data.jpa.repositories.enabled=true # if spring data repository support is enabled




###############################################################
# JTA (JtaAutoConfiguration)
###############################################################
spring.jta.log-dir= # transaction log dir
spring.jta.*= # technology specific configuration




###############################################################
# SOLR (SolrProperties})
###############################################################
spring.data.solr.host=[http://127.0.0.1:8983/solr](http://127.0.0.1:8983/solr)spring.data.solr.zk-host=spring.data.solr.repositories.enabled=true # if spring data repository support is enabled




###############################################################
# ELASTICSEARCH (ElasticsearchProperties})
###############################################################
spring.data.elasticsearch.cluster-name= # The cluster name (defaults to elasticsearch)
spring.data.elasticsearch.cluster-nodes= # The address(es) of the server node (comma-separated; if not specified starts a client node)
spring.data.elasticsearch.repositories.enabled=true # if spring data repository support is enabled






###############################################################
# DATA RESET (RepositoryRestConfiguration})
###############################################################
spring.data.rest.base-uri= # base URI against which the exporter should calculate its links





###############################################################
# FLYWAY (FlywayProperties)
###############################################################
flyway.check-location=false # check that migration scripts location exists
flyway.locations=classpath:db/migration # locations of migrations scripts
flyway.schemas= # schemas to update
flyway.init-version= 1 # version to start migration
flyway.init-sqls= # SQL statements to execute to initialize a connection immediately after obtaining it
flyway.sql-migration-prefix=V
flyway.sql-migration-suffix=.sql
flyway.enabled=true
flyway.url= # JDBC url if you want Flyway to create its own DataSource
flyway.user= # JDBC username if you want Flyway to create its own DataSource
flyway.password= # JDBC password if you want Flyway to create its own DataSource




###############################################################
# LIQUIBASE (LiquibaseProperties)
###############################################################
liquibase.change-log=classpath:/db/changelog/db.changelog-master.yaml
liquibase.check-change-log-location=true # check the change log location exists
liquibase.contexts= # runtime contexts to use
liquibase.default-schema= # default database schema to use
liquibase.drop-first=false
liquibase.enabled=true
liquibase.url= # specific JDBC url (if not set the default datasource is used)
liquibase.user= # user name for liquibase.url
liquibase.password= # password for liquibase.url




###############################################################
# JMX
###############################################################
spring.jmx.enabled=true # Expose MBeans from Spring 




###############################################################
# RABBIT (RabbitProperties)
###############################################################
spring.rabbitmq.host= # connection host
spring.rabbitmq.port= # connection port
spring.rabbitmq.addresses= # connection addresses (e.g. myhost:9999,otherhost:1111)
spring.rabbitmq.username= # login user
spring.rabbitmq.password= # login password
spring.rabbitmq.virtual-host=
spring.rabbitmq.dynamic=



###############################################################
# ACTIVEMQ (ActiveMQProperties)
###############################################################
spring.activemq.broker-url=tcp://localhost:61616 # connection URL
spring.activemq.user=
spring.activemq.password=
spring.activemq.in-memory=true # broker kind to create if no broker-url is specified
spring.activemq.pooled=false

