# 当然最好还是用 yml 文件来配置，能少写点
# 它严格使用缩进来区分，使用的是空格不允许使用 tab，空格的个数无所谓，只要能对其即可

# 配置文件名称，默认为application
spring.config.name=xxx

# 配置文件存放位置，默认为classpath目录下
spring.config.location=xxx

# 若想知道SpringBoot为我们做了哪些自动配置，就会看到Positive matches 列表
debug=true


###############################################################
# SpringMVC
###############################################################

# 设定async请求的超时时间，以毫秒为单位，如果没有设置的话，以具体实现的超时时间为准，比如tomcat的servlet3的话是10秒.
spring.mvc.async.request-timeout

# 设定日期的格式，比如dd/MM/yyyy.
spring.mvc.date-format

# 是否支持favicon.ico，默认为: true
spring.mvc.favicon.enabled

# 在重定向时是否忽略默认model的内容，默认为true
spring.mvc.ignore-default-model-on-redirect

# 指定使用的Locale.
spring.mvc.locale

# 指定message codes的格式化策略(PREFIX_ERROR_CODE,POSTFIX_ERROR_CODE).
spring.mvc.message-codes-resolver-format

# 指定mvc视图的前缀.
spring.mvc.view.prefix

# 指定mvc视图的后缀.
spring.mvc.view.suffix



###############################################################
# messages
###############################################################

# 指定message的basename，多个以逗号分隔，如果不加包名的话，默认从classpath路径开始，默认: messages
spring.messages.basename

# 设定加载的资源文件缓存失效时间，-1的话为永不过期，默认为-1
spring.messages.cache-seconds

# 设定Message bundles的编码，默认: UTF-8
spring.messages.encoding




###############################################################
# mobile
###############################################################

# 是否支持fallback的解决方案，默认false
spring.mobile.devicedelegatingviewresolver.enable-fallback

# 是否开始device view resolver，默认为: false
spring.mobile.devicedelegatingviewresolver.enabled

# 设定mobile端视图的前缀，默认为:mobile/
spring.mobile.devicedelegatingviewresolver.mobile-prefix

# 设定mobile视图的后缀
spring.mobile.devicedelegatingviewresolver.mobile-suffix

# 设定普通设备的视图前缀
spring.mobile.devicedelegatingviewresolver.normal-prefix

# 设定普通设备视图的后缀
spring.mobile.devicedelegatingviewresolver.normal-suffix

# 设定平板设备视图前缀，默认:tablet/
spring.mobile.devicedelegatingviewresolver.tablet-prefix

# 设定平板设备视图后缀.
spring.mobile.devicedelegatingviewresolver.tablet-suffix

# 是否启用SitePreferenceHandler，默认为: true
spring.mobile.sitepreference.enabled



###############################################################
# View
###############################################################

# 设定mvc视图的前缀.
spring.view.prefix

# 设定mvc视图的后缀.
spring.view.suffix




###############################################################
# resource
###############################################################

# 是否开启默认的资源处理，默认为true
spring.resources.add-mappings

# 设定资源的缓存时效，以秒为单位.
spring.resources.cache-period

# 是否开启缓存，默认为: true
spring.resources.chain.cache

# 是否开启资源 handling chain，默认为false
spring.resources.chain.enabled

# 是否开启h6应用的cache manifest重写，默认为: false
spring.resources.chain.html-application-cache

# 是否开启内容版本策略，默认为false
spring.resources.chain.strategy.content.enabled

# 指定要应用的版本的路径，多个以逗号分隔，默认为:[/**]
spring.resources.chain.strategy.content.paths

# 是否开启固定的版本策略，默认为false
spring.resources.chain.strategy.fixed.enabled

# 指定要应用版本策略的路径，多个以逗号分隔
spring.resources.chain.strategy.fixed.paths

# 指定版本策略使用的版本号
spring.resources.chain.strategy.fixed.version

# 指定静态资源路径，默认为classpath:[/META-INF/resources/,/resources/, /static/, /public/]以及context:/
spring.resources.static-locations




###############################################################
# multipart
###############################################################

# 是否开启文件上传支持，默认为true
multipart.enabled

# 设定文件写入磁盘的阈值，单位为MB或KB，默认为0
multipart.file-size-threshold

# 指定文件上传路径.
multipart.location

# 指定文件大小最大值，默认1MB
multipart.max-file-size

# 指定每次请求的最大值，默认为10MB
multipart.max-request-size




###############################################################
# freemarker
###############################################################

# 指定HttpServletRequest的属性是否可以覆盖controller的model的同名项
spring.freemarker.allow-request-override

# 指定HttpSession的属性是否可以覆盖controller的model的同名项
spring.freemarker.allow-session-override

# 是否开启template caching.
spring.freemarker.cache

# 设定Template的编码.
spring.freemarker.charset

# 是否检查templates路径是否存在.
spring.freemarker.check-template-location

# 设定Content-Type.
spring.freemarker.content-type

# 是否允许mvc使用freemarker.
spring.freemarker.enabled

# 设定所有request的属性在merge到模板的时候，是否要都添加到model中.
spring.freemarker.expose-request-attributes

# 设定所有HttpSession的属性在merge到模板的时候，是否要都添加到model中.
spring.freemarker.expose-session-attributes

# 设定是否以springMacroRequestContext的形式暴露RequestContext给Spring’s macro library使用
spring.freemarker.expose-spring-macro-helpers

# 是否优先从文件系统加载template，以支持热加载，默认为true
spring.freemarker.prefer-file-system-access

# 设定freemarker模板的前缀.
spring.freemarker.prefix

# 指定RequestContext属性的名.
spring.freemarker.request-context-attribute

# 设定FreeMarker keys.
spring.freemarker.settings

# 设定模板的后缀.
spring.freemarker.suffix

# 设定模板的加载路径，多个以逗号分隔，默认: ["classpath:/templates/"]
spring.freemarker.template-loader-path

# 指定使用模板的视图列表.
spring.freemarker.view-names





###############################################################
# velocity
###############################################################

# 指定HttpServletRequest的属性是否可以覆盖controller的model的同名项
spring.velocity.allow-request-override

# 指定HttpSession的属性是否可以覆盖controller的model的同名项
spring.velocity.allow-session-override

# 是否开启模板缓存
spring.velocity.cache

# 设定模板编码
spring.velocity.charset

# 是否检查模板路径是否存在.
spring.velocity.check-template-location

# 设定ContentType的值
spring.velocity.content-type

# 设定暴露给velocity上下文使用的DateTool的名
spring.velocity.date-tool-attribute

# 设定是否允许mvc使用velocity
spring.velocity.enabled

# 是否在merge模板的时候，将request属性都添加到model中
spring.velocity.expose-request-attributes

# 是否在merge模板的时候，将HttpSession属性都添加到model中
spring.velocity.expose-session-attributes

# 设定是否以springMacroRequestContext的名来暴露RequestContext给Spring’s macro类库使用
spring.velocity.expose-spring-macro-helpers

# 设定暴露给velocity上下文的NumberTool的名
spring.velocity.number-tool-attribute

# 是否优先从文件系统加载模板以支持热加载，默认为true
spring.velocity.prefer-file-system-access

# 设定velocity模板的前缀.
spring.velocity.prefix

# 设置velocity的额外属性.
spring.velocity.properties

# 设定RequestContext attribute的名.
spring.velocity.request-context-attribute

# 设定模板路径，默认为: classpath:/templates/
spring.velocity.resource-loader-path

# 设定velocity模板的后缀.
spring.velocity.suffix

# 设定Velocity Toolbox配置文件的路径，比如 /WEB-INF/toolbox.xml.
spring.velocity.toolbox-config-location

# 设定需要解析的视图名称.
spring.velocity.view-names





###############################################################
# thymeleaf
###############################################################

# 是否开启模板缓存，默认true
spring.thymeleaf.cache

# 是否检查模板路径是否存在，默认true
spring.thymeleaf.check-template-location

# 指定Content-Type，默认为: text/html
spring.thymeleaf.content-type

# 是否允许MVC使用Thymeleaf，默认为: true
spring.thymeleaf.enabled

# 指定模板的编码，默认为: UTF-8
spring.thymeleaf.encoding

# 指定不使用模板的视图名称，多个以逗号分隔.
spring.thymeleaf.excluded-view-names

# 指定模板的模式，具体查看StandardTemplateModeHandlers，默认为: HTML5
spring.thymeleaf.mode

# 指定模板的前缀，默认为:classpath:/templates/
spring.thymeleaf.prefix

# 指定模板的后缀，默认为:.html
spring.thymeleaf.suffix

# 指定模板的解析顺序，默认为第一个.
spring.thymeleaf.template-resolver-order

# 指定使用模板的视图名，多个以逗号分隔
spring.thymeleaf.view-names





###############################################################
# mustcache
###############################################################

# 是否Enable template caching.
spring.mustache.cache

# 指定Template的编码.
spring.mustache.charset

# 是否检查默认的路径是否存在.
spring.mustache.check-template-location

# 指定Content-Type.
spring.mustache.content-type

# 是否开启mustcache的模板支持.
spring.mustache.enabled

# 指定模板的前缀，默认: classpath:/templates/
spring.mustache.prefix

# 指定模板的后缀，默认: .html
spring.mustache.suffix

# 指定要使用模板的视图名.
spring.mustache.view-names





###############################################################
# groovy模板
###############################################################

# 指定HttpServletRequest的属性是否可以覆盖controller的model的同名项
spring.groovy.template.allow-request-override

# 指定HttpSession的属性是否可以覆盖controller的model的同名项
spring.groovy.template.allow-session-override

# 是否开启模板缓存.
spring.groovy.template.cache

# 指定Template编码.
spring.groovy.template.charset

# 是否检查模板的路径是否存在.
spring.groovy.template.check-template-location

# 是否在渲染模板时自动排查model的变量，默认为: false
spring.groovy.template.configuration.auto-escape

# 是否在渲染模板时自动缩进，默认为false
spring.groovy.template.configuration.auto-indent

# 如果自动缩进启用的话，是使用SPACES还是TAB，默认为: SPACES
spring.groovy.template.configuration.auto-indent-string

# 渲染模板时是否要输出换行，默认为false
spring.groovy.template.configuration.auto-new-line

# 指定template base class.
spring.groovy.template.configuration.base-template-class

# 是否要缓存模板，默认为true
spring.groovy.template.configuration.cache-templates

# 在写入declaration header时使用的编码
spring.groovy.template.configuration.declaration-encoding

# 设置展开模式（两种），默认为: false
spring.groovy.template.configuration.expand-empty-elements

# 指定template locale.
spring.groovy.template.configuration.locale

# 当启用自动换行时，换行的输出，默认为系统的line.separator属性的值
spring.groovy.template.configuration.new-line-string

# 指定groovy的模板路径，默认为classpath:/templates/
spring.groovy.template.configuration.resource-loader-path

# 指定属性要使用双引号还是单引号，默认为false
spring.groovy.template.configuration.use-double-quotes

# 指定Content-Type.
spring.groovy.template.content-type

# 是否开启groovy模板的支持.
spring.groovy.template.enabled

# 设定所有request的属性在merge到模板的时候，是否要都添加到model中.
spring.groovy.template.expose-request-attributes

# 设定所有request的属性在merge到模板的时候，是否要都添加到model中.
spring.groovy.template.expose-session-attributes

# 设定是否以springMacroRequestContext的形式暴露RequestContext给Spring’s macro library使用
spring.groovy.template.expose-spring-macro-helpers

# 指定模板的前缀.
spring.groovy.template.prefix

# 指定RequestContext属性的名.
spring.groovy.template.request-context-attribute

# 指定模板的路径，默认为: classpath:/templates/
spring.groovy.template.resource-loader-path

# 指定模板的后缀
spring.groovy.template.suffix

# 指定要使用模板的视图名称.
spring.groovy.template.view-names





###############################################################
# http
###############################################################

# 设定是否对object mapper也支持HATEOAS，默认为: true
spring.hateoas.apply-to-primary-object-mapper

# 是否优先使用JSON mapper来转换.
spring.http.converters.preferred-json-mapper

# 指定http请求和相应的Charset，默认: UTF-8
spring.http.encoding.charset

# 是否开启http的编码支持，默认为true
spring.http.encoding.enabled

# 是否强制对http请求和响应进行编码，默认为true
spring.http.encoding.force




###############################################################
# JSON
###############################################################

# 指定日期格式，比如yyyy-MM-dd HH:mm:ss，或者具体的格式化类的全限定名
spring.jackson.date-format

# 是否开启Jackson的反序列化
spring.jackson.deserialization

# 是否开启json的generators.
spring.jackson.generator

# 指定Joda date/time的格式，比如yyyy-MM-dd HH:mm:ss). 如果没有配置的话，dateformat会作为backup
spring.jackson.joda-date-time-format

# 指定json使用的Locale.
spring.jackson.locale

# 是否开启Jackson通用的特性.
spring.jackson.mapper

# 是否开启jackson的parser特性.
spring.jackson.parser

# 指定PropertyNamingStrategy (CAMEL_CASE_TO_LOWER_CASE_WITH_UNDERSCORES)或者指定PropertyNamingStrategy子类的全限定类名.
spring.jackson.property-naming-strategy

# 是否开启jackson的序列化.
spring.jackson.serialization

# 指定序列化时属性的inclusion方式，具体查看JsonInclude.Include枚举.
spring.jackson.serialization-inclusion

# 指定日期格式化时区，比如America/Los_Angeles或者GMT+10.
spring.jackson.time-zone





###############################################################
# jersey
###############################################################

# 指定Jersey filter的order，默认为: 0
spring.jersey.filter.order

# 指定传递给Jersey的初始化参数.
spring.jersey.init

# 指定Jersey的集成类型，可以是servlet或者filter.
spring.jersey.type


