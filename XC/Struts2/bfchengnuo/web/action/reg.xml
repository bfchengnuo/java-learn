<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE struts PUBLIC
        "-//Apache Software Foundation//DTD Struts Configuration 2.3//EN"
        "http://struts.apache.org/dtds/struts-2.3.dtd">

<struts>
    <!--<constant name="struts.custom.i18n.resources" value="com.bfchengnuo.web.action."/>-->
    
    <!--可以继承，它配置了很多默认值，如 type 等-->
    <package name="regPkg" namespace="/reg" extends="struts-default">
        <action name="RegAction_*" class="com.bfchengnuo.web.action.RegAction" method="{1}">
            <result name="success">/reg/success.jsp</result>
            <result name="error">/reg/error.jsp</result>
            <!-- 校验失败自动跳回 -->
            <result name="input">/reg/reg.jsp</result>
            <result name="regView">/reg/reg.jsp</result>

            <!--文件上传过滤相关-->
            <interceptor-ref name="defaultStack">
                <!-- 设置文件上传的上限,字节 -->
                <param name="fileUpload.maximumSize">1024000</param>
                <!-- 允许上传的扩展名 -->
                <param name="fileUpload.allowedExtensions">.jpg,.text</param>
                <!--设置允许的文件类型-->
                <param name="fileUpload.allowedTypes">image/jpg,image/jpeg</param>
                <!--错误信息可写在Action相关-->
            </interceptor-ref>

            <!-- 去校验的第三种方式：覆盖法指定跳过的方法，这个写法在配置文件中也可以找到 -->
            <!--<interceptor-ref name="defaultStack">-->
                <!--<param name="validation.excludeMethods">input,back,cancel,toReg</param>-->
            <!--</interceptor-ref>-->
        </action>

        <action name="TokenAction_*" class="com.bfchengnuo.web.action.TokenAction" method="{1}">
            <result name="success">/reg/success.jsp</result>
            <result name="regView">/reg/tokenReg.jsp</result>
            <!--指定 Token 验证失败后怎么办-->
            <result name="invalid.token">/reg/tokenReg.jsp</result>

            <!--指定拦截器栈，这样会覆盖默认栈，所以需要手动再添加一次-->
            <interceptor-ref name="token">
                <!--排除方法-->
                <param name="excludeMethods">toReg</param>
            </interceptor-ref>
            <interceptor-ref name="defaultStack"/>
        </action>

        <action name="WaitAction" class="com.bfchengnuo.web.action.WaitAction">
            <result>/reg/success.jsp</result>
            <result name="wait">/wait.jsp</result>
            <!--执行等待拦截器不在默认栈中，一般添加到最后就行-->
            <interceptor-ref name="defaultStack"/>
            <interceptor-ref name="execAndWait"/>
        </action>

    </package>
</struts>